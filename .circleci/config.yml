version: '2.1'
orbs:
  node: circleci/node@5.0.3
  terraform: circleci/terraform@3.2.0
jobs:
  build:
    executor:
      name: node/default
    steps:
      - checkout
      - run: npm --version
      - run: ls -l
      - persist_to_workspace:
          root: .
          paths:
            - terraform/*

  tf-plan:
    executor:
      name: terraform/default
      tag: 1.3.5
    environment:
      TF_IN_AUTOMATION: true
      GOOGLE_APPLICATION_CREDENTIALS: ./terraform-deploy.json
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: prepare gcp auth
          command: echo $GCP_SERVICE_KEY_DEV > ./terraform/terraform-deploy.json
      - run:
          name: prepare terraform vars
          command: |
            echo "google_project_id = \"$GOOGLE_PROJECT_ID\"" >> ./terraform/terraform-vars.tfvars
            echo "google_region = \"us-central1\"" >> ./terraform/terraform-vars.tfvars
      - run: ls -l
      - run: ls -l terraform
      - terraform/init:
          path: ./terraform
          backend_config: bucket=gcf-terraform-state
      - terraform/validate:
          path: ./terraform
      - terraform/plan:
          path: ./terraform
          var_file: ./terraform-vars.tfvars
          backend_config: bucket=gcf-terraform-state
      - persist_to_workspace:
          root: .
          paths:
            - terraform/*

  tf-apply:
    executor:
      name: terraform/default
      tag: 1.3.5
    environment:
      TF_IN_AUTOMATION: true
      GOOGLE_APPLICATION_CREDENTIALS: ./terraform-deploy.json
    steps:
      - attach_workspace:
          at: ./
      - run: ls -l
      - run: ls -l terraform
      - terraform/init:
          path: ./terraform
          backend_config: bucket=gcf-terraform-state
      - terraform/apply:
          path: ./terraform
          var_file: ./terraform-vars.tfvars
          backend_config: bucket=gcf-terraform-state

workflows:
  deploy:
    jobs:
      - build
      - tf-plan:
          context: GCP
          requires:
            - build
      - tf-apply:
          context: GCP
          requires:
            - tf-plan
          filters:
            branches:
              only: master

